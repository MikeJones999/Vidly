@model Vidly.ViewModels.MovieFormViewModel


@{
    ViewBag.Title = "MovieForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.title</h2>

@using (Html.BeginForm("Save", "Movies"))
{
     <!-- Provides a summary of issues at top of screen-->
     @Html.ValidationSummary()

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ReleaseDate)
        @Html.TextBoxFor(m => m.ReleaseDate, "{0:dd MMM yyyy}", new { @class = "form-control"})
        @Html.ValidationMessageFor(m => m.ReleaseDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.GenreId)
        @Html.DropDownListFor(m => m.GenreId, new SelectList(Model.Genres, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.GenreId)

    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NumberInStock)
        @Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-contol"})
        @Html.ValidationMessageFor(m => m.NumberInStock)
    </div>



    <!-- adds an id of customer to b checked in controller-->
    @Html.HiddenFor(m => m.Id);

    <!-- Session token for the system - helps handle cross site forgery scripting
        Need to add validation to post requests e.g save methods-->
    @Html.AntiForgeryToken()

    <button type="submit" class"btn btn-primary"> Save</button>
}


<!-- client side validation - does the above on clients browser - much faster
    The validation requirements are present when read by client and can be handed locally before being sent to server
    ***However only works with standard data annotations in .net - thus our dob check wont work-->
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

